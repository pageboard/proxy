include server.d/upcache.conf;

location /.well-known/statics/ {
  expires 12h;
  alias ./statics/;
}

location @notget {
  limit_req zone=ratePerIP burst=3;
  limit_req zone=ratePerHost burst=100 nodelay;

  set $req_body '';
  set $req_jwt '';
  log_by_lua_block {
    local vars = ngx.var
    if vars.upstream_error then
      -- ngx.req.read_body() -- does not work but i though it should have been called
      vars.req_body = ngx.req.get_body_data()
      vars.req_jwt = upcache.jwt(vars, ngx)
    end
  }
  access_log logs/upstream.log upstream if=$upstream_error;

  include location.d/upcache.conf;
  include location.d/pageboard.conf;
}

location / {
  error_page 500 /.well-known/statics/500.html;
  error_page 501 /.well-known/statics/501.html;
  error_page 502 /.well-known/statics/503.html;
  error_page 503 /.well-known/statics/503.html;
  error_page 504 /.well-known/statics/504.html;
  error_page 580 =410 /.well-known/statics/410.html;
  error_page 574 =404 /.well-known/statics/404.html;
  error_page 555 = @notget;

  access_by_lua_block {
    local vars = ngx.var
    local host = vars.host


    local ext = vars.uri:match('%.([^.]+)$')
    if ext == "php" or ext == "xml" or ext == "cgi" or ext == "htm" then
      return ngx.exit(580)
    end

    if host == vars.server_addr then
      return ngx.redirect("")
    end

    local to = ngx.shared.pageboardDomains:get(host)
    if to == nil then
      if vars.uri:match('^/%.well%-known/statics/.+$') then return end
      ngx.exit(574)
    elseif to:sub(1, 1) == "=" then
      local protocol
      local port = vars.http_host:match(":(%d+)")
      if vars.https == "on" then
        protocol = "https"
        if port == 443 then port = nil end
      else
        protocol = "http"
        if port == 80 then port = nil end
      end
      if port ~= nil then port = ":"..port else port = "" end
      local rwUrl = protocol .. "://" .. to:sub(2) .. port .. vars.request_uri
      return ngx.redirect(rwUrl)
    end
    local method = ngx.req.get_method()
    if method ~= "GET" and method ~= "HEAD" then
      return ngx.exit(555)
    end
  }

  include location.d/upcache.conf;
  include location.d/pageboard.conf;

}

