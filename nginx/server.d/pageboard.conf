include server.d/upcache.conf;

error_page 500 /.well-known/statics/500.html;
error_page 501 /.well-known/statics/501.html;
error_page 502 /.well-known/statics/503.html;
error_page 503 /.well-known/statics/503.html;
error_page 504 /.well-known/statics/504.html;
error_page 580 =410 /.well-known/statics/410.html;
error_page 574 =404 /.well-known/statics/404.html;

location /.well-known/statics/ {
  alias ./statics/;
}

error_page 555 = @notget;

if ($request_method !~ ^(GET|HEAD)$) {
  return 555;
}

access_by_lua_block {
  local vars = ngx.var
  local host = vars.host


  local ext = vars.uri:match('%.([^.]+)$')
  if ext == "php" or ext == "xml" or ext == "cgi" or ext == "htm" then
    return ngx.exit(580)
  end

  if host == vars.server_addr then
    return ngx.redirect("")
  end

  local to = ngx.shared.pageboardDomains:get(host)
  if to == nil then
    if vars.uri:match('^/%.well%-known/statics/.+$') then return end
    ngx.exit(574)
  elseif to:sub(1, 1) == "=" then
    local protocol
    local port = vars.http_host:match(":(%d+)")
    if vars.https == "on" then
      protocol = "https"
      if port == 443 then port = nil end
    else
      protocol = "http"
      if port == 80 then port = nil end
    end
    if port ~= nil then port = ":"..port else port = "" end
    local rwUrl = protocol .. "://" .. to:sub(2) .. port .. vars.request_uri
    return ngx.redirect(rwUrl)
  end
}

location @notget {
  limit_req zone=ratePerIP burst=3;
  limit_req zone=ratePerHost burst=100 nodelay;
  include location.d/upcache.conf;
  include location.d/pageboard.conf;
}

location / {
  include location.d/upcache.conf;
  include location.d/pageboard.conf;
}
