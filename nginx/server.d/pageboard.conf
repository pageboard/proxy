include server.d/upcache.conf;

error_page 500 /.well-known/statics/500.html;
error_page 501 /.well-known/statics/501.html;
error_page 502 /.well-known/statics/502.html;
error_page 503 /.well-known/statics/503.html;
error_page 504 /.well-known/statics/504.html;

error_page 555 = @notget;

if ($request_uri ~ \.(htm|php|xml|cgi)(\?|$)) {
  return 404;
}

if ($request_method !~ ^(GET|HEAD)$) {
  return 555;
}

access_by_lua_block {
  local vars = ngx.var
  local host = vars.host

  if host == vars.server_addr then
    return ngx.exit(400)
  end

  local to = ngx.shared.pageboardDomains:get(host)
  if to == nil then
    return ngx.exit(503)
  elseif to:sub(1, 1) == "=" then
    local protocol
    local port = vars.http_host:match(":(%d+)")
    if vars.https == "on" then
      protocol = "https"
      if port == 443 then port = nil end
    else
      protocol = "http"
      if port == 80 then port = nil end
    end
    if port ~= nil then port = ":"..port else port = "" end
    local rwUrl = protocol .. "://" .. to:sub(2) .. port .. vars.request_uri
    return ngx.redirect(rwUrl)
  end
}

location /.well-known/statics/ {
  internal;
  alias ./statics/;
}

location @notget {
  limit_req zone=ratePerIP burst=3;
  limit_req zone=ratePerHost burst=100 nodelay;
  set $req_body '';
  set $req_jwt '';

  log_by_lua_block {
    local vars = ngx.var
    if vars.upstream_error then
      -- ngx.req.read_body()
      vars.req_body = ngx.req.get_body_data()
      vars.req_jwt = upcache.jwt(vars, ngx)
    end
  }
  access_log logs/upstream.log upstream if=$upstream_error;
  include location.d/upcache.conf;
  include location.d/pageboard.conf;
}

location / {
  include location.d/upcache.conf;
  include location.d/pageboard.conf;
}
