upstream pageboard {
  server 127.0.0.1:17000;
}

lua_package_path './rocks/share/lua/5.1/?.lua;';

# The "auto_ssl" shared dict should be defined with enough storage space to
# hold your certificate data. 1MB of storage holds certificates for
# approximately 100 separate domains.
lua_shared_dict auto_ssl 10m;
# The "auto_ssl" shared dict is used to temporarily store various settings
# like the secret used by the hook server on port 8999. Do not change or
# omit it.
lua_shared_dict auto_ssl_settings 64k;

# A DNS resolver must be defined for OCSP stapling to function.
#
# This example uses Google's DNS server. You may want to use your system's
# default DNS servers, which can be found in /etc/resolv.conf. If your network
# is not IPv6 compatible, you may wish to disable IPv6 results by using the
# "ipv6=off" flag (like "resolver 8.8.8.8 ipv6=off").
resolver 127.0.0.1 ipv6=off;

# Initial setup tasks.
init_by_lua_block {
  upcache = require "upcache"
  auto_ssl = (require "resty.auto-ssl").new()

  auto_ssl:set("hook_server_port", 17099)
  auto_ssl:set("dir", (require "lfs").currentdir() .. "/autossl")
  -- uncomment for development
  -- auto_ssl:set("ca", "https://acme-staging.api.letsencrypt.org/directory")

  -- Define a function to determine which SNI domains to automatically handle
  -- and register new certificates for. Defaults to not allowing any domains,
  -- so this must be configured.
  auto_ssl:set("allow_domain", function(domain)
    local http = require "resty.http"
    local httpc = http.new()
    local res, err = httpc:request_uri("http://"..domain.."/.well-known/pageboard", {
      method = "HEAD",
    })

    if not res or res.status ~= 200 then
      return false
    else
      return true
    end
  end)

  auto_ssl:init()
}

init_worker_by_lua_block {
  auto_ssl:init_worker()
}

# Internal server running on port 8999 for handling certificate tasks.
server {
  listen 127.0.0.1:17099;

  # Increase the body buffer size, to ensure the internal POSTs can always
  # parse the full POST contents into memory.
  client_body_buffer_size 128k;
  client_max_body_size 128k;

  location / {
    content_by_lua_block {
      auto_ssl:hook_server()
    }
  }
}

server {
  listen 17443 ssl http2 default_server;
  server_name _;
  # use for debugging only
  # access_log access.log;

  ssl_certificate_key ssl/resty-auto-ssl-fallback.key;
  ssl_certificate     ssl/resty-auto-ssl-fallback.crt;

  ssl_certificate_by_lua_block {
    auto_ssl:ssl_certificate()
  }

  include snippets/upcache-server.conf;

  location / {
    include snippets/upcache-location.conf;
    include proxy_params;
    proxy_pass http://pageboard;
  }
}

server {
  listen       17080 default_server;
  server_name _;

  location /.well-known/acme-challenge/ {
    content_by_lua_block {
      auto_ssl:challenge_server()
    }
  }

  include snippets/upcache-server.conf;

  location / {
    include snippets/upcache-location.conf;
    include proxy_params;
    # comment me when testing localhost:17080
    # proxy_set_header X-Redirect-Secure 1;
    proxy_pass http://pageboard;
  }
}

